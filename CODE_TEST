# Code TEST 

## Fonctions génériques

import geopandas as gpd
from shapely.geometry import Point, LineString, Polygon

### 1) Vérifier la connectivité des entités linéaires (les lignes doivent toucher une autre ligne)
def check_connectivity(gdf):
    errors = []
    for idx, line in gdf.iterrows():
        touches = gdf[gdf.geometry.touches(line.geometry)]
        if touches.empty:
            errors.append(idx)
    return errors

### 2) Vérifier qu'il n'y a pas d'auto-intersection
def check_no_self_intersection(gdf):
    errors = [idx for idx, geom in gdf.geometry.items() if not geom.is_simple]
    return errors

### 3) Vérifier qu'une entité ne se superpose pas à elle-même
def check_no_self_overlap(gdf):
    errors = [idx for idx, geom in gdf.geometry.items() if geom.crosses(geom)]
    return errors

### 4) Vérifier que les géométries sont valides
def check_valid_geometries(gdf):
    errors = [idx for idx, geom in gdf.geometry.items() if not geom.is_valid]
    return errors

### 5) Vérifier la projection de la couche
def check_projection(gdf, epsg=3945):
    return gdf.crs.to_epsg() == epsg

### 6) Vérifier les doublons géométriques
def check_duplicate_geometries(gdf):
    duplicated = gdf[gdf.duplicated(subset=["geometry"])]
    return duplicated.index.tolist()

### 7) Vérifier que chaque point est bien contenu dans une surface (ex. arbres dans un espace vert)
def check_points_in_surface(points_gdf, surface_gdf):
    errors = [idx for idx, point in points_gdf.geometry.items() if not any(point.within(poly) for poly in surface_gdf.geometry)]
    return errors

### 8) Vérifier que les lignes intersectent une surface donnée (ex. passage piéton doit toucher une route)
def check_lines_intersect_surface(lines_gdf, surface_gdf):
    errors = [idx for idx, line in lines_gdf.geometry.items() if not any(line.intersects(poly) for poly in surface_gdf.geometry)]
    return errors
